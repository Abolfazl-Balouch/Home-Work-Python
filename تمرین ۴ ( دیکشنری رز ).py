# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1COWGnCEysT-bcRfa9dFb4Pgzl1j2_ynP
"""

class RoseDictionary():
    def __init__(self, init=None):
        self.keys = list()
        if init is not None:
            self.__dict__.update(init)

    def __setitem__(self, key, value):
        self.__dict__[key] = value
        self.keys.append(key)

    def __getitem__(self, key):
        return self.__dict__[key]

    def __delitem__(self, key):
        del self.__dict__[key]

    def pop_item(self, raise_error=False, default="Dictionary was empty and no default value/message was specified.", error_msg="error_msg"):
        try:
            value = self.keys[-1]
            v = self[value]
            del self[value]
            self.keys.remove(value)
            return v
        except:
            if raise_error:
              raise KeyError(error_msg)
            else:
              if error_msg == "error_msg":
                return default
              else:
                return error_msg

    def get_item(self, key, raise_error=False, default="Dictionary was empty and no default value/message was specified.", error_msg="error_msg"):
        try:
          return self[key]
        except:
          if raise_error:
            raise KeyError(error_msg)
          else:
            if error_msg == 'error_msg':
              return default
            else:
              return error_msg